[hello.bf: Print "Hello World"]

[Loop body explanation:]
[This loop initializes the values for data address 1 through 4 to values _close_ to what we want]
[Execute this loop 10 times: ++++++++++]
[Move to data index 1 and increment by  7: >+++++++]
[Move to data index 2 and increment by 10: >++++++++++]
[Move to data index 3 and increment by  3: >+++]
[Move to data index 4 and increment by  1: >+]
[Move to data index 0 and decrement by  1: <<<<-]

[At this point, the data will be initialized to the following]
[  0 70 100 30 10] [decimal values]
[NUL  F   d RS \n] [characters]
[Not quite what we want, but using a loop kept the initializer code short]

[Now let's fine-tune the values and print them]
[Task        Code                    Data (characters)]
[Print 'H':  >++.]                   [NUL H d RS  \n]
[Print 'e':  >+.]                    [NUL H e RS  \n]
[Print 'l':  +++++++.]               [NUL H l RS  \n]
[Print 'l':  .]                      [NUL H l RS  \n]
[Print 'o':  +++.]                   [NUL H o RS  \n]
[Print ' ':  >++.]                   [NUL H o ' ' \n]
[Print 'W':  <<+++++++++++++++.]     [NUL W o ' ' \n]
[Print 'o':  >.]                     [NUL W o ' ' \n]
[Print 'r':  +++.]                   [NUL W r ' ' \n]
[Print 'l':  ------.]                [NUL W l ' ' \n]
[Print 'd':  --------.]              [NUL W d ' ' \n]
[Print '!':  >+.]                    [NUL W d !   \n]
[Print '\n': >.]                     [NUL W d !   \n]

[Now that you've read the explanation, let's run it!]
++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>.
